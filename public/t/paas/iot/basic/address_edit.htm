<!-- Create By xBoson System -->
<div>
  <h5>消息地址管理</h5>
  <style>
    .desc { min-width: 130px; display: inline-block; }
    .addr { color: #339; }
    .label { height: 19px; }
    #address_message_form h5 { margin-bottom: 10px; }
  </style>
  <form id='address_message_template' class='hide'>
    <div class='send'>
      <form:checkbox name='send'></form:checkbox>
    </div>
    <div class='recv'>
      <form:checkbox name='recv'></form:checkbox>
    </div>
    <div class='info'>
      <div class=''>
        <span class='desc'></span>
        <span class='addr'></span>
      </div>
    </div>
  </form>
  
  <ui:form id='address_message_form' class='update_form'>
    <mp:loaddata id='datatable0'/>
    
    <fieldset class='info'>
      <input type='hidden' name='_id'/>
      <input type='hidden' name='scenes'/>
    </fieldset>
    
    <fieldset class='send'>
      <h5>MQTT 可写入消息的设备账户</h5>
    </fieldset>
    
    <fieldset class='recv'>
      <h5>MQTT 可接收消息的设备账户</h5>
    </fieldset>
    
    
    <fieldset>
      <h5>PASS 消息处理器设置</h5>
      
      <div class='row'>
        <form:text label='data 主题线程数' width='3' name='data_count'>
          <vali:number min='0' max='30'/>
        </form:text>
        <form:select label='data 主题接收/发送设备账户' width='3' name='data_user' 
          class='recv_user send_user'>
        </form:select>
        <form:select label='data 主题 Qos' width='3' name='data_qos'>
          <option value='0'>Qos0 最多一次</option>
          <option value='1'>Qos1 至少一次</option>
          <option value='2'>Qos2 仅一次</option>
        </form:select>
        <form:api_select2 name='data_script' label='data 主题脚本' tooltip='必填脚本' width='3'
            app='2e617eb7e1744bbcb6a0518fa85a84a5' mod='basic' api='scriptlist'
            text_field='_id' id_field='_id'>
        </form:api_select2>
      </div>
      
      <div class='row'>
        <form:text label='save 主题线程数' width='3' name='save_count'>
          <vali:number min='0' max='30'/>
        </form:text>
        <form:select label='save 主题接收设备账户' width='3' name='save_user' class='recv_user'>
        </form:select>
        <form:select label='save 主题 Qos' width='3' name='save_qos'>
          <option value='0'>Qos0 最多一次</option>
          <option value='1'>Qos1 至少一次</option>
          <option value='2'>Qos2 仅一次</option>
        </form:select>
      </div>
      
      <div class='row'>
        <form:text label='state 主题线程数' width='3' name='state_count'>
          <vali:number min='0' max='30'/>
        </form:text>
        <form:select label='state 主题接收设备账户' width='3' name='state_user' class='recv_user'>
        </form:select>
        <form:select label='state 主题 Qos' width='3' name='state_qos'>
          <option value='0'>Qos0 最多一次</option>
          <option value='1'>Qos1 至少一次</option>
          <option value='2'>Qos2 仅一次</option>
        </form:select>
      </div>
      
      <div class='row'>
        <form:text label='event 主题线程数' width='3' name='event_count'>
          <vali:number min='0' max='30'/>
        </form:text>
        <form:select label='event 主题接收设备账户' width='3' name='event_user' class='recv_user'>
        </form:select>
        <form:select label='event 主题 Qos' width='3' name='event_qos'>
          <option value='0'>Qos0 最多一次</option>
          <option value='1'>Qos1 至少一次</option>
          <option value='2'>Qos2 仅一次</option>
        </form:select>
      </div>
      
      <div class='row'>
        <section class='col col-10'>
          <input type="checkbox" name='auto_restart' value='true' id='auto_restart'>
          <label class="custom-control-label" for="auto_restart">
            PAAS 平台重启时自动恢复线程, 请保证主题配置正确</label>
        </section>
      </div>
    </fieldset>
    
    <footer>
      <div class="node">'设备账户' 应该只被一个用户设置, 
        否则当前用户的 '设备账户' 会覆盖其他用户的配置, 导致设备无法连接 MQTT<br/>
        只有设置为 Qos1/Qos2, 才会在线程停止时继续保留离线消息<br/>
        主题的发送 QoS 不会高于订阅的 QoS
      </div>
      <moda:cancel/>
      <moda:ok>
        <form:post app='2e617eb7e1744bbcb6a0518fa85a84a5' mod='basic' api='addr_edit'>
        </form:post>
      </moda:ok>
    </footer>
  </ui:form>
  
<script>
jQuery(function($) {
  var root = $("#address_message_form");
  var tpl = $("#address_message_template");
  tpl.find("script").remove();
  
  var recv_tpl = tpl.find(".recv:not(script)").html();
  var send_tpl = tpl.find(".send:not(script)").html();
  var info_tpl = tpl.find(".info").html();
  var recv_tar = root.find(".recv");
  var send_tar = root.find(".send");
  
  xb.api('2e617eb7e1744bbcb6a0518fa85a84a5', 'basic', 'listuser', {enb:1}, function(x) {
    if (x.data.length < 1) {
      var msg = "没有可用的设备账户";
      recv_tar.html(msg);
      send_tar.html(msg);
      return;
    }
    
    x.data.forEach(function(u) {
      var inf = u.info;
      recv_tar.append(new_user_ckbox_select(recv_tpl, u._id, inf, '.recv_user'));
      send_tar.append(new_user_ckbox_select(send_tpl, u._id, inf, '.send_user'));
    });
  });
  
  var p = { _id: root.find("[name=_id]").val() };
  
  xb.api('2e617eb7e1744bbcb6a0518fa85a84a5', 'basic', 'addr_get', p, function(x) {
    for (var n in x.data.send) {
      root.find(".send [value='"+ n +"']").prop("checked", true);
    }
    for (var n in x.data.recv) {
      root.find(".recv [value='"+ n +"']").prop("checked", true);
    }
    
    root.find("[name=auto_restart]").prop('checked', Boolean(x.data.auto_restart));
    set_val_with_obj(x.data, 'data');
    set_val_with_obj(x.data, 'state');
    set_val_with_obj(x.data, 'event');
    set_val_with_obj(x.data, 'save');
    root.find("[name=data_script]").trigger("updateval");
    
    update_addr_info(x.data.fmt, x.mq);
  });
  
  
  function set_val_with_obj(obj, name) {
    var x = obj[name];
    if (!x) return;
    ['count', 'user', 'qos', 'script'].forEach(function(suffix) {
      var n = name +"_"+ suffix;
      root.find("[name='"+ n +"']").val(x[suffix]);
    });
  }
  
  
  function update_addr_info(fmt, mq) {
    in_addr("设备发送数据地址",   [fmt, '设备ID', 'data']);
    in_addr("SAAS接收数据地址",   [fmt, '+',      'data']);
    in_addr("处理后数据发送地址", [fmt, '设备ID', 'save']);
    in_addr("设备接收命令地址",   [fmt, '设备ID', 'cmd']);
    in_addr("设备发送状态地址",   [fmt, '设备ID', 'state']);
    in_addr("设备发送消息地址",   [fmt, '设备ID', 'event']);
    in_addr("MQTT 服务器",        [mq]);
  }
  
  
  function new_user_ckbox_select(tpl, username, info, user_kind) {
    var r = $(tpl);
    r.find(".label").text(info);
    r.find(".form-control").text(username);
    var ck = r.find(":checkbox").val(username);
    
    // 初始化用户下拉列表
    var opt_tar = root.find(user_kind);
    var opt = $("<option>").attr("value", username).text(username);
    opt_tar.append(opt);
    // 等待 dom 挂载后更新状态
    setTimeout(function() {r.change();}, 1);
    
    // 列表同步用户选中状态
    r.change(function() {
      var c = ck.prop("checked");
      
      opt_tar.each(function() {
        var sl = $(this);
        var o = sl.find("[value='"+ username +"']").hide();
        if (c) {
          o.first().show();
        } else {
          let_select_nothing_if_eq(sl, username);
        }
      });
    });
    return r;
  }
  
  
  function let_select_nothing_if_eq(s, eq_val) {
    s.each(function() {
      if (this.value == eq_val) {
        this.value = '';
      }
    });
  }
  
  
  function in_addr(desc, addr, sp) {
    var i = $(info_tpl);
    i.find(".desc").html(desc);
    i.find(".addr").html(addr.join(sp || "/"));
    root.find(".info").append(i);
  }
});
</script>
</div>